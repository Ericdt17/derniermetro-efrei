version: "3.9"

services:
  api:
    image: ${API_IMAGE:-ghcr.io/ericdt17/devops-ninja-api:main}
    environment:
      - PORT=5000
      - NODE_ENV=production
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=${DB_USER:-app}
      - DB_PASSWORD=${DB_PASSWORD:-app}
      - DB_NAME=${DB_NAME:-dernier_metro}
    depends_on:
      - postgres
    expose:
      - "5000"
    restart: unless-stopped

  postgres:
    image: postgres:16-alpine
    environment:
      - POSTGRES_USER=${DB_USER:-app}
      - POSTGRES_PASSWORD=${DB_PASSWORD:-app}
      - POSTGRES_DB=${DB_NAME:-dernier_metro}
    volumes:
      - pgdata-staging:/var/lib/postgresql/data
      - ./db:/docker-entrypoint-initdb.d:ro
    restart: unless-stopped

  caddy:
    image: caddy:2-alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./caddy/Caddyfile:/etc/caddy/Caddyfile:ro
      - caddy-data:/data
      - caddy-config:/config
    environment:
      - CADDY_DOMAIN=${STAGING_DOMAIN}
    depends_on:
      - api
    restart: unless-stopped

volumes:
  pgdata-staging:
  caddy-data:
  caddy-config:



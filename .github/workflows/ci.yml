name: CI

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  test-node-and-e2e:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: api/package.json

      - name: Install dependencies (api)
        working-directory: api
        run: npm ci

      - name: Run unit/mocked integration tests
        env:
          NODE_ENV: test
          TZ: Europe/Paris
        working-directory: api
        run: npm run test:ci

      - name: Build and start Docker Compose
        run: |
          docker compose version
          docker compose up -d --build

      - name: Wait for API health
        run: |
          tries=40
          until curl -fsS http://localhost:5001/health; do
            tries=$((tries-1))
            if [ $tries -le 0 ]; then
              echo "API did not become healthy in time" >&2
              docker compose logs --no-color api postgres || true
              exit 1
            fi
            sleep 1
          done

      - name: Run E2E tests (real API + Postgres)
        env:
          API_BASE: http://localhost:5001
          TZ: Europe/Paris
        working-directory: api
        run: npm run test:e2e

      - name: Compose logs on failure
        if: failure()
        run: docker compose logs --no-color api postgres || true

      - name: Tear down
        if: always()
        run: docker compose down -v


